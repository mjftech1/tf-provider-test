name: Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Get runner IP
        run: |
          ip=`curl https://ipinfo.io/ip`
          echo $ip
          echo "runner_ip=$ip" >> $GITHUB_ENV
      - name: Add IP to AF allowlist
        run: | 
          curl --location --request POST 'https://my.jfrog.com/api/jmis/v1/allowlist/mjftech1' \
          --header 'Authorization: Bearer ${{ secrets.AF_API_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "ips": ["${{ env.runner_ip }}/32"]
          }'
        env:
          AF_API_TOKEN: ${{ secrets.AF_API_TOKEN }}
      - name: Wait for allowlist update before continuing
        run: |
          while [ "$(curl -s --location --request GET 'https://my.jfrog.com/api/jmis/v1/allowlist/mjftech1' --header 'Authorization: Bearer '${{ secrets.AF_API_TOKEN }} | jq -r '.status')" == "IN_PROGRESS"  ]; do
            echo -n '.'
            sleep 5
          done
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform version
        shell: bash
        run: terraform version
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform init
        shell: bash
        run: terraform init
      - name: Terraform Plan
        shell: bash
        run: terraform plan -out=tfplan.plan
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan.plan
          retention-days: 30
      - name: Remove IP from AF allowlist
        run: | 
          curl --location --request DELETE 'https://my.jfrog.com/api/jmis/v1/allowlist/mjftech1' \
          --header 'Authorization: Bearer ${{ secrets.AF_API_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "ips": ["${{ env.runner_ip }}/32"]
          }'
        env:
          AF_API_TOKEN: ${{ secrets.AF_API_TOKEN }}
      - name: Wait for allowlist update before continuing
        run: |
          while [ "$(curl -s --location --request GET 'https://my.jfrog.com/api/jmis/v1/allowlist/mjftech1' --header 'Authorization: Bearer '${{ secrets.AF_API_TOKEN }} | jq -r '.status')" == "IN_PROGRESS"  ]; do
            echo -n '.'
            sleep 5
          done
  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform version
        shell: bash
        run: terraform version
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform init
        shell: bash
        run: terraform init
      - name: Terraform Apply
        shell: bash
        run: terraform apply -auto-approve tfplan.plan
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
